package wykresy;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import klasy.Surowiec;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Elater
 */
public class LineChart_AWT extends javax.swing.JFrame {

       public LineChart_AWT( String applicationTitle , String chartTitle ) throws IOException {
      super(applicationTitle);
      Surowiec s = new Surowiec();
      JFreeChart lineChart = ChartFactory.createLineChart(
         chartTitle,
         "Sekundy","Wartość",
         createDataset(s),
         PlotOrientation.VERTICAL,
         true,true,false);
         
      ChartPanel chartPanel = new ChartPanel( lineChart );
      chartPanel.setPreferredSize( new java.awt.Dimension( 560 , 367 ) );
      setContentPane( chartPanel );
   }

   private DefaultCategoryDataset createDataset( Surowiec s) {
      DefaultCategoryDataset dataset = new DefaultCategoryDataset( );
      dataset.addValue(  s.listaHistoria[0], "wartość" , "4" );
      if(s.listaHistoria[1]!=null) dataset.addValue( s.listaHistoria[1] , "wartość" ,  "8" );
      if(s.listaHistoria[2]!=null) dataset.addValue( s.listaHistoria[2] , "wartość" , "12" );
      if(s.listaHistoria[3]!=null) dataset.addValue( s.listaHistoria[3] , "wartość" , "16" );
      if(s.listaHistoria[4]!=null) dataset.addValue( s.listaHistoria[4] , "wartość" , "20" );
      if(s.listaHistoria[5]!=null) dataset.addValue( s.listaHistoria[5] , "wartość" , "24" );
      if(s.listaHistoria[6]!=null) dataset.addValue( s.listaHistoria[6] , "wartość" , "28" );
      if(s.listaHistoria[7]!=null) dataset.addValue( s.listaHistoria[7] , "wartość" , "32" );
      if(s.listaHistoria[8]!=null) dataset.addValue( s.listaHistoria[8] , "wartość" , "36" );
      if(s.listaHistoria[9]!=null) dataset.addValue( s.listaHistoria[9] , "wartość" , "40" );
      return dataset;
   }
    /**
     * Creates new form LineChart_AWT
     */
    public LineChart_AWT() throws IOException {
        initComponents();
        Surowiec s = new Surowiec();
        createDataset(s);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 13, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LineChart_AWT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LineChart_AWT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LineChart_AWT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LineChart_AWT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
      LineChart_AWT chart = new LineChart_AWT(
         "Wykres surowcow w czasie" ,
         "Wykres surowcow");

      chart.pack( );
      RefineryUtilities.centerFrameOnScreen( chart );
      chart.setVisible( true );
   
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LineChart_AWT().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(LineChart_AWT.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
