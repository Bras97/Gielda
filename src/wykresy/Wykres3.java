/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wykresy;

import java.io.IOException;
import java.util.List;
import klasy.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Elater
 */
public class Wykres3 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Wykres
     */
    public Wykres3(List<Spolka> s) throws IOException {
        initComponents();
        //Surowiec s = new Surowiec();
        
        FillData(s);
    }

    private void FillData(List<Spolka> lista)
    {
        DefaultCategoryDataset dataBar = new DefaultCategoryDataset();
        for(Spolka s: lista)
        {
        dataBar.setValue(s.listaHistoria[0], s.getNazwa(), "0");
        if(s.listaHistoria[1]!=null) dataBar.setValue(s.listaHistoria[1], s.getNazwa(), "1");
        if(s.listaHistoria[2]!=null) dataBar.setValue(s.listaHistoria[2], s.getNazwa(), "2");
        if(s.listaHistoria[3]!=null) dataBar.setValue(s.listaHistoria[3], s.getNazwa(), "3");
        if(s.listaHistoria[4]!=null) dataBar.setValue(s.listaHistoria[4], s.getNazwa(), "4");
        if(s.listaHistoria[5]!=null) dataBar.setValue(s.listaHistoria[5], s.getNazwa(), "5");
        if(s.listaHistoria[6]!=null) dataBar.setValue(s.listaHistoria[6], s.getNazwa(), "6");
        if(s.listaHistoria[7]!=null) dataBar.setValue(s.listaHistoria[7], s.getNazwa(), "7");
        if(s.listaHistoria[8]!=null) dataBar.setValue(s.listaHistoria[8], s.getNazwa(), "8");
        if(s.listaHistoria[9]!=null) dataBar.setValue(s.listaHistoria[9], s.getNazwa(), "9");
        }
        JFreeChart chart = ChartFactory.createLineChart("Wykres", "Czas", "Wartość", dataBar);
        ChartFrame frame = new ChartFrame("", chart);
        frame.setSize(800,400 );
        frame.setVisible(true);
       
            lista.clear();
         
        System.out.println("hmmmmm");
        
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setClosable(true);
        setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
